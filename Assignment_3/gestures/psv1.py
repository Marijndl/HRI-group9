# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("LElbowRoll")
times.append([0, 0.64, 6.08, 14.88, 15.24, 16.36, 17.12, 17.6, 18.48])
keys.append([[-0.336849, [3, -0.0133333, 0], [3, 0.213333, 0]], [-0.551524, [3, -0.213333, 0.0133028], [3, 1.81333, -0.113074]], [-0.715977, [3, -1.81333, 0.0782326], [3, 2.93333, -0.126553]], [-1.16588, [3, -2.93333, 0], [3, 0.12, 0]], [-1.16588, [3, -0.12, 0], [3, 0.373333, 0]], [-0.729548, [3, -0.373333, 0], [3, 0.253333, 0]], [-0.830777, [3, -0.253333, 0], [3, 0.16, 0]], [-0.830777, [3, -0.16, 0], [3, 0.293333, 0]], [-0.551524, [3, -0.293333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0, 0.64, 6.08, 14.88, 15.24, 16.36, 17.12, 17.6, 18.48])
keys.append([[-1.5132, [3, -0.0133333, 0], [3, 0.213333, 0]], [-1.5132, [3, -0.213333, 0], [3, 1.81333, 0]], [-1.274, [3, -1.81333, -0.113793], [3, 2.93333, 0.184077]], [-0.619592, [3, -2.93333, 0], [3, 0.12, 0]], [-0.619592, [3, -0.12, 6.6579e-08], [3, 0.373333, -2.07135e-07]], [-1.28282, [3, -0.373333, 0], [3, 0.253333, 0]], [-0.329867, [3, -0.253333, 0], [3, 0.16, 0]], [-0.329867, [3, -0.16, 0], [3, 0.293333, 0]], [-1.5132, [3, -0.293333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0, 0.64, 6.08, 14.88, 15.24, 16.36, 17.12, 17.6, 18.48])
keys.append([[0.02, [3, -0.0133333, 0], [3, 0.213333, 0]], [0.02, [3, -0.213333, 0], [3, 1.81333, 0]], [0.02, [3, -1.81333, 0], [3, 2.93333, 0]], [0.02, [3, -2.93333, 0], [3, 0.12, 0]], [0.02, [3, -0.12, 0], [3, 0.373333, 0]], [0.02, [3, -0.373333, 0], [3, 0.253333, 0]], [0.22, [3, -0.253333, 0], [3, 0.16, 0]], [0.22, [3, -0.16, 0], [3, 0.293333, 0]], [0.02, [3, -0.293333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0, 0.64, 6.08, 16.36, 17.12, 17.6, 18.48])
keys.append([[1.7558, [3, -0.0133333, 0], [3, 0.213333, 0]], [1.7558, [3, -0.213333, 0], [3, 1.81333, 0]], [1.32292, [3, -1.81333, 0.00736845], [3, 3.42667, -0.0139242]], [1.309, [3, -3.42667, 0.0139242], [3, 0.253333, -0.00102942]], [-0.968658, [3, -0.253333, 1.05417e-07], [3, 0.16, -6.6579e-08]], [-0.968658, [3, -0.16, 0], [3, 0.293333, 0]], [1.7558, [3, -0.293333, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0, 0.64, 6.08, 16.36, 17.12, 17.6, 18.48])
keys.append([[0.195477, [3, -0.0133333, 0], [3, 0.213333, 0]], [0.195477, [3, -0.213333, 0], [3, 1.81333, 0]], [0.187435, [3, -1.81333, 0.00522039], [3, 3.42667, -0.00986501]], [0.150221, [3, -3.42667, 0.013214], [3, 0.253333, -0.000976907]], [0.144862, [3, -0.253333, 0], [3, 0.16, 0]], [0.144862, [3, -0.16, 0], [3, 0.293333, 0]], [0.195477, [3, -0.293333, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0, 0.64, 6.08, 16.36, 18.48])
keys.append([[-0.176278, [3, -0.0133333, 0], [3, 0.213333, 0]], [-0.176278, [3, -0.213333, 0], [3, 1.81333, 0]], [-0.176278, [3, -1.81333, 0], [3, 3.42667, 0]], [-0.176278, [3, -3.42667, 0], [3, 0.706667, 0]], [-0.176278, [3, -0.706667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0, 1.16, 4.32, 6.08, 7.32, 7.84, 8.4, 8.64, 9.36, 10.6, 14.44, 14.88, 15.24, 16.36, 17.12, 17.6])
keys.append([[1.26013, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.387463, [3, -0.386667, 0], [3, 1.05333, 0]], [0.724312, [3, -1.05333, -0.178984], [3, 0.586667, 0.0996872]], [1.22348, [3, -0.586667, 0], [3, 0.413333, 0]], [0.801106, [3, -0.413333, 0], [3, 0.173333, 0]], [1.56032, [3, -0.173333, 0], [3, 0.186667, 0]], [1.56032, [3, -0.186667, 1.33158e-07], [3, 0.08, -5.70677e-08]], [0.668461, [3, -0.08, 0], [3, 0.24, 0]], [0.668461, [3, -0.24, 0], [3, 0.413333, 0]], [0.668461, [3, -0.413333, 0], [3, 1.28, 0]], [0.668461, [3, -1.28, 0], [3, 0.146667, 0]], [1.00007, [3, -0.146667, 0], [3, 0.12, 0]], [1.00007, [3, -0.12, 0], [3, 0.373333, 0]], [1.00007, [3, -0.373333, 0], [3, 0.253333, 0]], [0.659734, [3, -0.253333, 0], [3, 0.16, 0]], [0.659734, [3, -0.16, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([4.32, 7.32, 7.84, 8.4, 8.64, 9.36, 10.6, 14.44, 14.88, 15.24, 16.36, 17.12, 17.6])
keys.append([[1.13446, [3, -1.45333, 0], [3, 1, 0]], [1.18159, [3, -1, 0], [3, 0.173333, 0]], [1.00531, [3, -0.173333, 6.18234e-08], [3, 0.186667, -6.6579e-08]], [1.00531, [3, -0.186667, 0], [3, 0.08, 0]], [1.00531, [3, -0.08, 0], [3, 0.24, 0]], [1.00531, [3, -0.24, 0], [3, 0.413333, 0]], [1.00531, [3, -0.413333, 0], [3, 1.28, 0]], [1.00531, [3, -1.28, 0], [3, 0.146667, 0]], [1.01927, [3, -0.146667, -8.13744e-08], [3, 0.12, 6.6579e-08]], [1.01927, [3, -0.12, 0], [3, 0.373333, 0]], [1.01927, [3, -0.373333, 0], [3, 0.253333, 0]], [0.256563, [3, -0.253333, 0], [3, 0.16, 0]], [0.256563, [3, -0.16, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0, 0.64, 1.16, 4.32, 6.08, 7.32, 7.84, 8.4, 8.64, 9.36, 10.6, 14.44, 14.88, 15.24, 16.36, 17.12, 17.6, 18.48])
keys.append([[0.32, [3, -0.0133333, 0], [3, 0.213333, 0]], [0.32, [3, -0.213333, 0], [3, 0.173333, 0]], [0.93, [3, -0.173333, 0], [3, 1.05333, 0]], [0.29, [3, -1.05333, 0], [3, 0.586667, 0]], [0.29, [3, -0.586667, 0], [3, 0.413333, 0]], [0.88, [3, -0.413333, 0], [3, 0.173333, 0]], [0.05, [3, -0.173333, 0], [3, 0.186667, 0]], [0.05, [3, -0.186667, 0], [3, 0.08, 0]], [0.86, [3, -0.08, 0], [3, 0.24, 0]], [0.86, [3, -0.24, 0], [3, 0.413333, 0]], [0.58, [3, -0.413333, 0], [3, 1.28, 0]], [0.98, [3, -1.28, 0], [3, 0.146667, 0]], [0.03, [3, -0.146667, 0], [3, 0.12, 0]], [0.03, [3, -0.12, 0], [3, 0.373333, 0]], [0.86, [3, -0.373333, 0], [3, 0.253333, 0]], [0.86, [3, -0.253333, 0], [3, 0.16, 0]], [0.86, [3, -0.16, 0], [3, 0.293333, 0]], [0.32, [3, -0.293333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([1.16, 4.32, 6.08, 7.32, 7.84, 8.4, 8.64, 9.36, 10.6, 14.44, 14.88, 15.24, 16.36, 17.12, 17.6])
keys.append([[0.911062, [3, -0.4, 0], [3, 1.05333, 0]], [0.911062, [3, -1.05333, 0], [3, 0.586667, 0]], [0.911062, [3, -0.586667, 0], [3, 0.413333, 0]], [0.911062, [3, -0.413333, 0], [3, 0.173333, 0]], [0.911062, [3, -0.173333, 0], [3, 0.186667, 0]], [0.911062, [3, -0.186667, 0], [3, 0.08, 0]], [0.911062, [3, -0.08, 0], [3, 0.24, 0]], [0.911062, [3, -0.24, 0], [3, 0.413333, 0]], [0.911062, [3, -0.413333, 0], [3, 1.28, 0]], [0.911062, [3, -1.28, 0], [3, 0.146667, 0]], [0.911062, [3, -0.146667, 0], [3, 0.12, 0]], [0.911062, [3, -0.12, 0], [3, 0.373333, 0]], [0.911062, [3, -0.373333, 0], [3, 0.253333, 0]], [-0.68766, [3, -0.253333, 0.0110537], [3, 0.16, -0.00698128]], [-0.694641, [3, -0.16, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([1.16, 4.32, 6.08, 7.32, 7.84, 8.4, 8.64, 9.36, 10.6, 14.44, 14.88, 15.24, 16.36, 17.12, 17.6])
keys.append([[-0.464258, [3, -0.4, 0], [3, 1.05333, 0]], [-0.464258, [3, -1.05333, 0], [3, 0.586667, 0]], [-0.464258, [3, -0.586667, 0], [3, 0.413333, 0]], [-0.464258, [3, -0.413333, 0], [3, 0.173333, 0]], [-0.464258, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.464258, [3, -0.186667, 0], [3, 0.08, 0]], [-0.464258, [3, -0.08, 0], [3, 0.24, 0]], [-0.464258, [3, -0.24, 0], [3, 0.413333, 0]], [-0.464258, [3, -0.413333, 0], [3, 1.28, 0]], [-0.464258, [3, -1.28, 0], [3, 0.146667, 0]], [-0.464258, [3, -0.146667, 0], [3, 0.12, 0]], [-0.464258, [3, -0.12, 0], [3, 0.373333, 0]], [-0.464258, [3, -0.373333, 0], [3, 0.253333, 0]], [-0.516617, [3, -0.253333, 0.0523598], [3, 0.16, -0.0330694]], [-0.79587, [3, -0.16, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([1.16, 4.32, 6.08, 7.32, 7.84, 8.4, 8.64, 9.36, 10.6, 14.44, 14.88, 15.24, 16.36, 17.12, 17.6])
keys.append([[1.52891, [3, -0.4, 0], [3, 1.05333, 0]], [-0.383972, [3, -1.05333, 0], [3, 0.586667, 0]], [-0.383972, [3, -0.586667, 0], [3, 0.413333, 0]], [1.42244, [3, -0.413333, 0], [3, 0.173333, 0]], [-0.0244346, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.0244346, [3, -0.186667, 0], [3, 0.08, 0]], [-0.0244346, [3, -0.08, 0], [3, 0.24, 0]], [-0.0244346, [3, -0.24, 0], [3, 0.413333, 0]], [1.5708, [3, -0.413333, 0], [3, 1.28, 0]], [1.5708, [3, -1.28, 0], [3, 0.146667, 0]], [1.25664, [3, -0.146667, 0], [3, 0.12, 0]], [1.25664, [3, -0.12, 0], [3, 0.373333, 0]], [1.25664, [3, -0.373333, 0], [3, 0.253333, 0]], [1.25664, [3, -0.253333, 0], [3, 0.16, 0]], [1.25664, [3, -0.16, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
