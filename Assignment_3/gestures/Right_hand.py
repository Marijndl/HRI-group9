# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadYaw")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[0, [3, -0.0133333, 0], [3, 0.146667, 0]], [-1.00182, [3, -0.146667, 0], [3, 0.0933333, 0]], [-0.90059, [3, -0.0933333, 0], [3, 0.08, 0]], [-0.90059, [3, -0.08, 0], [3, 0.2, 0]], [-0.90059, [3, -0.2, 0], [3, 0.533333, 0]], [-0.90059, [3, -0.533333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[0.10472, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.659734, [3, -0.146667, -0.024684], [3, 0.0933333, 0.015708]], [0.675442, [3, -0.0933333, 0], [3, 0.08, 0]], [0.534071, [3, -0.08, 0.0634967], [3, 0.2, -0.158742]], [0.00872665, [3, -0.2, 0], [3, 0.533333, 0]], [0.254818, [3, -0.533333, 0], [3, 0.266667, 0]], [0.10472, [3, -0.266667, 0], [3, 0.133333, 0]], [0.10472, [3, -0.133333, 0], [3, 0.133333, 0]], [0.10472, [3, -0.133333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[1.71217, [3, -0.0133333, 0], [3, 0.146667, 0]], [1.7174, [3, -0.146667, 0], [3, 0.0933333, 0]], [1.7174, [3, -0.0933333, 0], [3, 0.08, 0]], [1.7174, [3, -0.08, 0], [3, 0.2, 0]], [1.7174, [3, -0.2, 0], [3, 0.533333, 0]], [1.7174, [3, -0.533333, 0], [3, 0.266667, 0]], [1.71217, [3, -0.266667, 0], [3, 0.133333, 0]], [1.71217, [3, -0.133333, 0], [3, 0.133333, 0]], [1.71217, [3, -0.133333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[0.69, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.98, [3, -0.146667, 0], [3, 0.0933333, 0]], [0.98, [3, -0.0933333, 0], [3, 0.08, 0]], [0.98, [3, -0.08, 0], [3, 0.2, 0]], [0.98, [3, -0.2, 0], [3, 0.533333, 0]], [0.98, [3, -0.533333, 0], [3, 0.266667, 0]], [0.69, [3, -0.266667, 0], [3, 0.133333, 0]], [0.69, [3, -0.133333, 0], [3, 0.133333, 0]], [0.69, [3, -0.133333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[1.76976, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.47822, [3, -0.146667, 0], [3, 0.0933333, 0]], [-0.47822, [3, -0.0933333, 0], [3, 0.08, 0]], [-0.47822, [3, -0.08, 0], [3, 0.2, 0]], [-0.47822, [3, -0.2, 0], [3, 0.533333, 0]], [-1.05069, [3, -0.533333, 0], [3, 0.266667, 0]], [1.76976, [3, -0.266667, 0], [3, 0.133333, 0]], [1.76976, [3, -0.133333, 0], [3, 0.133333, 0]], [1.76976, [3, -0.133333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[-0.0994838, [3, -0.0133333, 0], [3, 0.146667, 0]], [-1.13446, [3, -0.146667, 0.0987357], [3, 0.0933333, -0.0628318]], [-1.1973, [3, -0.0933333, 0.0360254], [3, 0.08, -0.0308789]], [-1.33518, [3, -0.08, 0.0139626], [3, 0.2, -0.0349066]], [-1.37008, [3, -0.2, 0.0206266], [3, 0.533333, -0.0550043]], [-1.56207, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.0994838, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.0994838, [3, -0.133333, 0], [3, 0.133333, 0]], [-0.0994838, [3, -0.133333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0, 0.44, 0.72, 0.96, 1.56, 3.16, 3.96, 4.36, 4.76])
keys.append([[0.0383972, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.455531, [3, -0.146667, 0], [3, 0.0933333, 0]], [0.455531, [3, -0.0933333, 0], [3, 0.08, 0]], [0.455531, [3, -0.08, 0], [3, 0.2, 0]], [0.455531, [3, -0.2, 0], [3, 0.533333, 0]], [0.0279253, [3, -0.533333, 0], [3, 0.266667, 0]], [0.0383972, [3, -0.266667, 0], [3, 0.133333, 0]], [0.0383972, [3, -0.133333, 0], [3, 0.133333, 0]], [0.0383972, [3, -0.133333, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
