# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[-0.172788, [3, -0.0133333, 0], [3, 0.32, 0]], [0.258309, [3, -0.32, 0], [3, 1.01333, 0]], [0.258309, [3, -1.01333, 0], [3, 0.293333, 0]], [-0.172788, [3, -0.293333, 0], [3, 0.48, 0]], [-0.172788, [3, -0.48, 0], [3, 0.36, 0]], [-0.172788, [3, -0.36, 0], [3, 0.253333, 0]], [-0.172788, [3, -0.253333, 0], [3, 0.4, 0]], [-0.172788, [3, -0.4, 0], [3, 0.573333, 0]], [-0.39968, [3, -0.573333, 0], [3, 1.25333, 0]], [-0.39968, [3, -1.25333, 0], [3, 0.706667, 0]], [-0.172788, [3, -0.706667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[-0.00698132, [3, -0.0133333, 0], [3, 0.32, 0]], [0.755728, [3, -0.32, 0], [3, 1.01333, 0]], [0.755728, [3, -1.01333, 0], [3, 0.293333, 0]], [-0.00698132, [3, -0.293333, 0], [3, 0.48, 0]], [-0.00698132, [3, -0.48, 0], [3, 0.36, 0]], [-0.00698132, [3, -0.36, 0], [3, 0.253333, 0]], [-0.00698132, [3, -0.253333, 0], [3, 0.4, 0]], [-0.00698132, [3, -0.4, 0], [3, 0.573333, 0]], [0.172788, [3, -0.573333, -0.0710319], [3, 1.25333, 0.155279]], [0.671952, [3, -1.25333, 0], [3, 0.706667, 0]], [-0.00698132, [3, -0.706667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[-0.802851, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.374403, [3, -0.32, 0], [3, 1.01333, 0]], [-0.374403, [3, -1.01333, 0], [3, 0.293333, 0]], [-0.802851, [3, -0.293333, 0], [3, 0.48, 0]], [-0.802851, [3, -0.48, 0], [3, 0.36, 0]], [-1.41197, [3, -0.36, 0], [3, 0.253333, 0]], [-1.41197, [3, -0.253333, 0], [3, 0.4, 0]], [-1.41197, [3, -0.4, 0], [3, 0.573333, 0]], [-0.680054, [3, -0.573333, 0], [3, 1.25333, 0]], [-0.680054, [3, -1.25333, 0], [3, 0.706667, 0]], [-0.802851, [3, -0.706667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[-1.2706, [3, -0.0133333, 0], [3, 0.32, 0]], [-1.15195, [3, -0.32, 0], [3, 1.01333, 0]], [-1.15195, [3, -1.01333, 0], [3, 0.293333, 0]], [-1.2706, [3, -0.293333, 0], [3, 0.48, 0]], [-1.2706, [3, -0.48, 0], [3, 0.36, 0]], [-1.2706, [3, -0.36, 0], [3, 0.253333, 0]], [-1.2706, [3, -0.253333, 0], [3, 0.4, 0]], [-1.2706, [3, -0.4, 0], [3, 0.573333, 0]], [-0.342491, [3, -0.573333, 0], [3, 1.25333, 0]], [-0.342491, [3, -1.25333, 0], [3, 0.706667, 0]], [-1.2706, [3, -0.706667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.96, 4, 7.4, 8.16, 9.36, 14.84])
keys.append([[0.98, [3, -0.333333, 0], [3, 1.01333, 0]], [0.98, [3, -1.01333, 0], [3, 1.13333, 0]], [0.1, [3, -1.13333, 0], [3, 0.253333, 0]], [0.98, [3, -0.253333, 0], [3, 0.4, 0]], [0.98, [3, -0.4, 0], [3, 1.82667, 0]], [0.98, [3, -1.82667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[1.49575, [3, -0.0133333, 0], [3, 0.32, 0]], [1.17539, [3, -0.32, 0], [3, 1.01333, 0]], [1.17539, [3, -1.01333, 0], [3, 0.293333, 0]], [1.49575, [3, -0.293333, 0], [3, 0.48, 0]], [1.49575, [3, -0.48, 0], [3, 0.36, 0]], [0.862193, [3, -0.36, 0], [3, 0.253333, 0]], [0.862193, [3, -0.253333, 0], [3, 0.4, 0]], [0.862193, [3, -0.4, 0], [3, 0.573333, 0]], [-0.76969, [3, -0.573333, 0], [3, 1.25333, 0]], [-0.76969, [3, -1.25333, 0], [3, 0.706667, 0]], [1.49575, [3, -0.706667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[0.153589, [3, -0.0133333, 0], [3, 0.32, 0]], [0.671859, [3, -0.32, 0], [3, 1.01333, 0]], [0.671859, [3, -1.01333, 0], [3, 0.293333, 0]], [0.153589, [3, -0.293333, 0], [3, 0.48, 0]], [0.153589, [3, -0.48, 0], [3, 0.36, 0]], [0.153589, [3, -0.36, 0], [3, 0.253333, 0]], [0.254818, [3, -0.253333, 0], [3, 0.4, 0]], [0.254818, [3, -0.4, 0], [3, 0.573333, 0]], [-0.0487867, [3, -0.573333, 0], [3, 1.25333, 0]], [0.621337, [3, -1.25333, 0], [3, 0.706667, 0]], [0.153589, [3, -0.706667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0, 0.96, 4, 4.88, 6.32, 7.4, 8.16, 9.36, 11.08, 14.84, 16.96])
keys.append([[-0.455531, [3, -0.0133333, 0], [3, 0.32, 0]], [-1.61497, [3, -0.32, 0], [3, 1.01333, 0]], [-1.61497, [3, -1.01333, 0], [3, 0.293333, 0]], [-0.455531, [3, -0.293333, 0], [3, 0.48, 0]], [-0.455531, [3, -0.48, 0], [3, 0.36, 0]], [-0.455531, [3, -0.36, 0], [3, 0.253333, 0]], [-0.516617, [3, -0.253333, 0], [3, 0.4, 0]], [-0.516617, [3, -0.4, 0], [3, 0.573333, 0]], [0.00698132, [3, -0.573333, -0.0415166], [3, 1.25333, 0.0907571]], [0.0977384, [3, -1.25333, 0], [3, 0.706667, 0]], [-0.455531, [3, -0.706667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.96, 4, 7.4, 8.16, 9.36, 16.96])
keys.append([[0.722566, [3, -0.333333, 0], [3, 1.01333, 0]], [0.722566, [3, -1.01333, 0], [3, 1.13333, 0]], [1.43292, [3, -1.13333, 0], [3, 0.253333, 0]], [1.43292, [3, -0.253333, 0], [3, 0.4, 0]], [1.43292, [3, -0.4, 0], [3, 2.53333, 0]], [0.998328, [3, -2.53333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.96, 4, 8.16, 9.36, 16.96])
keys.append([[1.27235, [3, -0.333333, 0], [3, 1.01333, 0]], [1.27235, [3, -1.01333, 0], [3, 1.38667, 0]], [1.43833, [3, -1.38667, 0], [3, 0.4, 0]], [1.43833, [3, -0.4, 0], [3, 2.53333, 0]], [1.25664, [3, -2.53333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([7.4, 8.16, 9.36])
keys.append([[0.15, [3, -2.48, 0], [3, 0.253333, 0]], [0.98, [3, -0.253333, 0], [3, 0.4, 0]], [0.98, [3, -0.4, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.96, 4, 7.4, 8.16, 9.36, 16.96])
keys.append([[1.49924, [3, -0.333333, 0], [3, 1.01333, 0]], [1.49924, [3, -1.01333, 0], [3, 1.13333, 0]], [0.865683, [3, -1.13333, 0], [3, 0.253333, 0]], [0.865683, [3, -0.253333, 0], [3, 0.4, 0]], [0.865683, [3, -0.4, 0], [3, 2.53333, 0]], [1.81514, [3, -2.53333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([7.4, 8.16, 9.36, 16.96])
keys.append([[-0.244346, [3, -2.48, 0], [3, 0.253333, 0]], [-0.244346, [3, -0.253333, 0], [3, 0.4, 0]], [-0.244346, [3, -0.4, 0], [3, 2.53333, 0]], [-0.16057, [3, -2.53333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([8.16, 9.36])
keys.append([[0.534071, [3, -2.73333, 0], [3, 0.4, 0]], [0.534071, [3, -0.4, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
